version: "3"

services:
  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8081:8080
      - 50000:50000
    networks:
      - networks
    container_name: jenkins
    volumes:
      - ./jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
      - ./log/jenkins:/var/log/jenkins

  sonarqube:
    image: sonarqube
    depends_on:
      - db
    ulimits:
      nproc: 131072
      nofile:
        soft: 8192
        hard: 131072
    ports:
      - 9000:9000
    networks:
      - networks
    container_name: sonar
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - ./sonarqube_data:/opt/sonarqube/data
      - ./sonarqube_extensions:/opt/sonarqube/extensions
      - ./sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
      - ./sonarqube_logs:/opt/sonarqube/logs
      - ./sonarqube_temp:/opt/sonarqube/temp
  init:
    image: bash
    privileged: true
    user: root
    volumes:
      - ./init.sh:/mnt/init.sh
    command: ["sh", "-e", "/mnt/init.sh"]

  db:
    image: postgres
    networks:
      - networks
    container_name: postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - ./postgresql:/var/lib/postgresql
      - ./postgresql_data:/var/lib/postgresql/data

networks:
  networks:

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  postgresql:
  postgresql_data:
  sonarqube_bundled-plugins: